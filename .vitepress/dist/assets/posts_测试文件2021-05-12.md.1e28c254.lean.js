import{_ as a,v as e,b as s,R as t}from"./chunks/framework.99a657a2.js";const f=JSON.parse('{"title":"测试文件2021-05-12","description":"","frontmatter":{"title":"测试文件2021-05-12","date":"2021-05-12T00:00:00.000Z","tags":["测试"]},"headers":[],"relativePath":"posts/测试文件2021-05-12.md","filePath":"posts/测试文件2021-05-12.md"}'),n={name:"posts/测试文件2021-05-12.md"},r=t(`<h1 id="markdown语法测试文章" tabindex="-1"><a class="header-anchor" href="#markdown语法测试文章">#</a> Markdown语法测试文章</h1><h2 id="标题" tabindex="-1"><a class="header-anchor" href="#标题">#</a> 标题</h2><p>这是一个示例文章，用于测试各种Markdown语法元素的渲染效果。</p><h2 id="文本格式" tabindex="-1"><a class="header-anchor" href="#文本格式">#</a> 文本格式</h2><p>在Markdown中，你可以使用<strong>粗体</strong>、<em>斜体</em>和<s>删除线</s>来强调你的文本。</p><h2 id="列表" tabindex="-1"><a class="header-anchor" href="#列表">#</a> 列表</h2><h3 id="无序列表" tabindex="-1"><a class="header-anchor" href="#无序列表">#</a> 无序列表</h3><ul><li>项目1</li><li>项目2 <ul><li>子项目A</li><li>子项目B</li></ul></li><li>项目3</li></ul><h3 id="有序列表" tabindex="-1"><a class="header-anchor" href="#有序列表">#</a> 有序列表</h3><ol><li>第一步</li><li>第二步</li><li>第三步</li></ol><h2 id="链接与图片" tabindex="-1"><a class="header-anchor" href="#链接与图片">#</a> 链接与图片</h2><p>你可以插入链接：<a href="https://www.openai.com/" target="_blank" rel="noreferrer">OpenAI官网</a>。</p><p>以及图片： <img src="https://markdown-here.com/img/icon256.png" alt="Markdown Logo"></p><h2 id="引用" tabindex="-1"><a class="header-anchor" href="#引用">#</a> 引用</h2><blockquote><p>这是一个引用示例。Markdown使引用文本变得简单。</p></blockquote><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码">#</a> 代码</h2><p>内联代码使用 <code>code</code>，代码块使用：</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">hello_world</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, world!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="表格" tabindex="-1"><a class="header-anchor" href="#表格">#</a> 表格</h2><table><thead><tr><th>姓名</th><th>年龄</th><th>职业</th></tr></thead><tbody><tr><td>小明</td><td>25</td><td>工程师</td></tr><tr><td>小红</td><td>28</td><td>设计师</td></tr><tr><td>小李</td><td>22</td><td>学生</td></tr></tbody></table><h2 id="分割线" tabindex="-1"><a class="header-anchor" href="#分割线">#</a> 分割线</h2><hr><p>以上是一个简单的Markdown语法测试示例。希望这对于测试你的Markdown编译器很有帮助！</p><p>如有任何疑问，请随时问我。</p>`,24),o=[r];function l(d,h,p,i,c,b){return e(),s("div",null,o)}const u=a(n,[["render",l]]);export{f as __pageData,u as default};
